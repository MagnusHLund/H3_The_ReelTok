services:
  traefik:
    image: traefik:latest
    ports:
      - "80:80"
      - "8080:8080"
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: unless-stopped
    networks:
      - traefik
      - backend

   
  mssql:
    image: mcr.microsoft.com/mssql/server:2022-latest
    build:
      context: .
      dockerfile: Dockerfile.mssql
    container_name: mssql
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=${MSSQL_SA_PASSWORD}
    ports:
      - "1433:1433"
    volumes:
      - ./mssql-data:/var/opt/mssql/data
    healthcheck:
      test: ["CMD", "nc", "-z", "-v", "127.0.0.1", "1433;"]
      interval: 10s
      timeout: 10s
      retries: 10
    networks:
      - backend
  
  static-file-server:
    image: nginx:latest
    ports:
      - "8082:8082"
    volumes:
      - ./data/videos:/usr/share/nginx/html/videos  
      - ./data/profiles:/usr/share/nginx/html/profiles
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf 
    networks:
      - backend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.static-file-server.rule=Host(`cdn.reeltok.site`)"
      - "traefik.http.routers.static-file-server.entrypoints=web"
      - "traefik.http.services.nginx.loadbalancer.server.port=8082"

  sftp:
    image: atmoz/sftp
    container_name: sftp-server
    ports:
      - "22:22"
    command: VideosService:${SFTP_PASSWORD_VIDEOSSERVICE}:1001 UsersService:${SFTP_PASSWORD_USERSSERVICE}:1002
    volumes:
      - ./data/videos:/home/VideosService/videos          
      - ./data/profiles:/home/UsersService/profiles
      - ./sftp-entrypoint.sh:/sftp-entrypoint.sh
    entrypoint: ["/bin/sh", "/sftp-entrypoint.sh"]
    restart: always
    networks:
      - backend

  api-auth:
    build:
      context: .
      dockerfile: Dockerfile.auth
    environment:
      - RUN_API_AUTH=true
      - ASPNETCORE_URLS=http://+:5003
    ports:
      - "5003:5003"
    volumes:
      - ./config/appsettings.auth.json:/app/H3_The_ReelTok/reeltok.api/reeltok.api.auth/appsettings.json
    networks:
      - backend
    depends_on:
      - mssql

  api-comments:
    build:
      context: .
      dockerfile: Dockerfile.comments
    environment:
      - RUN_API_COMMENTS=true
      - ASPNETCORE_URLS=http://+:5005
    ports:
      - "5005:5005"
    volumes:
      - ./config/appsettings.comments.json:/app/H3_The_ReelTok/reeltok.api/reeltok.api.comments/appsettings.json
    networks:
      - backend
    depends_on:
      - mssql

  api-gateway:
    build:
      context: .
      dockerfile: Dockerfile.gateway
    environment:
      - RUN_API_GATEWAY=true
      - ASPNETCORE_URLS=http://+:5000
    ports:
      - "5000:5000"
    volumes:
      - ./config/appsettings.gateway.json:/app/H3_The_ReelTok/reeltok.api/reeltok.api.gateway/appsettings.json
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api-gateway.rule=Host(`api.reeltok.site`)"
      - "traefik.http.routers.api-gateway.entrypoints=web"
      - "traefik.http.middlewares.api-gateway.headers.accesscontrolallowmethods=GET,OPTIONS,PUT,POST,DELETE"
      - "traefik.http.middlewares.api-gateway.headers.accesscontrolallowheaders=*"
      - "traefik.http.middlewares.api-gateway.headers.accesscontrolalloworiginlist=https://reeltok.site,http://localhost:8081"
      - "traefik.http.middlewares.api-gateway.headers.accesscontrolmaxage=100"
      - "traefik.http.middlewares.api-gateway.headers.addvaryheader=true"
    networks:
      - traefik
      - backend
    depends_on:
      - mssql

  api-recommendations:
    build:
      context: .
      dockerfile: Dockerfile.recommendations
    environment:
      - RUN_API_RECOMMENDATIONS=true
      - ASPNETCORE_URLS=http://+:5004
    ports:
      - "5004:5004" 
    networks:
      - backend
    volumes:
      - ./config/appsettings.recommendations.json:/app/H3_The_ReelTok/reeltok.api/reeltok.api.recommendations/appsettings.json
    depends_on:
      - mssql

  api-users:
    build:
      context: .
      dockerfile: Dockerfile.users
    environment:
      - RUN_API_USERS=true
      - ASPNETCORE_URLS=http://+:5001
    ports:
      - "5001:5001"
    volumes:
      - ./config/appsettings.users.json:/app/H3_The_ReelTok/reeltok.api/reeltok.api.users/appsettings.json
    networks:
      - backend
    depends_on:
      - mssql

  api-videos:
    build:
      context: .
      dockerfile: Dockerfile.videos
    environment:
      - RUN_API_VIDEOS=true
      - ASPNETCORE_URLS=http://+:5002
    ports:
      - "5002:5002"
    volumes:
      - ./config/appsettings.videos.json:/app/H3_The_ReelTok/reeltok.api/reeltok.api.videos/appsettings.json
    networks:
      - backend
    depends_on:
      - mssql

networks:
  backend:
    driver: bridge
  traefik:
    external: true

volumes:
  mssql-data:

